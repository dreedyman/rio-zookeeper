package org.rioproject.zookeeper.service;

import org.apache.zookeeper.KeeperException;
import org.apache.zookeeper.ZooKeeper;
import org.rioproject.annotation.SetServiceBeanContext;
import org.rioproject.servicebean.ServiceBeanContext;
import org.rioproject.zookeeper.api.Zookeeper;
import org.rioproject.zookeeper.client.GroupManagement;
import org.rioproject.zookeeper.client.ZooKeeperClient;

import javax.annotation.PostConstruct;
import javax.annotation.PreDestroy;
import java.io.IOException;
import java.util.concurrent.ExecutionException;

/**
 * Zookeeper service implementation
 *
 * @author Generated by the Rio Archetype
 */
public class ZookeeperImpl implements Zookeeper {
    private ServiceBeanContext context;
    private final ZooKeeperClient zooKeeperClient = new ZooKeeperClient();
    private GroupManagement groupManagement;

    @SetServiceBeanContext
    public void set(ServiceBeanContext context) {
        this.context = context;
    }

    @PostConstruct
    public void after() throws IOException, KeeperException, InterruptedException, ExecutionException {
        String zooInfo = "127.0.0.1:3010";
        ZooKeeper zooKeeper= zooKeeperClient.connect(zooInfo, 3000).get();
        groupManagement = new GroupManagement(zooKeeper);
        groupManagement.create(context.getServiceElement().getOperationalStringName());
        groupManagement.join(context.getServiceElement().getOperationalStringName(), getNodeName());
    }

    private String getNodeName() {
        return String.format("%s:%d",
                             context.getServiceElement().getName(),
                             context.getServiceBeanConfig().getInstanceID());
    }

    @PreDestroy
    public void shutdown() {
        if(groupManagement==null)
            return;
        groupManagement.delete(context.getServiceElement().getOperationalStringName(), getNodeName());
        zooKeeperClient.close();
    }

}
